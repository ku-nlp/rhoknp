name: test

on:
  push:
  pull_request:
    types: [opened]
  workflow_dispatch:

jobs:
  test:
    name: Run tests with pytest
    container: kunlp/jumanpp-knp:ubuntu
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install required apt packages
      run: |
        apt update -y
        apt install -y curl libsqlite3-dev gcc libffi-dev
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        python3 -m pip install --user pipx
        python3 -m pipx ensurepath
        python3 -m pipx install poetry
    - name: Add path for Python packages
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install --no-interaction
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
    - name: Run tests
      run: |
        poetry run pytest --mypy --cov-config=./.coveragerc --cov=rhoknp --cov-branch --cov-report=xml -v ./tests
    - name: Upload coverage to Codecov
      if: ${{ matrix.python-version==3.9 }}
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        name: codecov-umbrella
        verbose: true
