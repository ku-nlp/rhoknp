name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run tests with pytest
    runs-on: ubuntu-latest
    container: kunlp/jumanpp-knp:ubuntu
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.9]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install required apt packages
      run: |
        apt update -y
        apt install -y curl libsqlite3-dev
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
    - name: Add path for Poetry
      run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install --no-interaction
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
    - name: Run tests
      run: |
        poetry run pytest --mypy --cov-config=./.coveragerc --cov=rhoknp --cov-branch --cov-report=xml -v ./tests
    - name: Upload coverage to Codecov
      if: ${{ matrix.python-version==3.9 }}
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true
